{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Daniel Perry\
ECE253 Lab 3\
PART IV\
module seq7(SW, HEXO);\
	input [1:0] SW;\
	output [6:0] HEXO;\
	wire c1,c0;\
	assign c1 = SW[1]\
	assign c0 = SW[0]\
	assign HEXO[0] = c1|c0\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	assign HEXO[1] = c0\
	assign HEXO[2] = (~c1&~c0)|(c1&c0)\
	assign HEXO[3] = c1|c0\
	assign HEXO[4] = c1&c0\
	assign HEXO[5] = ~c0|c1\
	assign HEXO[6] = c1|c0\
endmodule\
\
PART V\
//top level module\
\
//seq7 module\
module seq7(SW, HEXO);\
	input [1:0] SW;\
	output [6:0] HEXO;\
	wire c1,c0;\
	assign c1 = SW[1]\
	assign c0 = SW[0]\
	assign HEXO[0] = c1|c0\
	assign HEXO[1] = c0\
	assign HEXO[2] = (~c1&~c0)|(c1&c0)\
	assign HEXO[3] = c1|c0\
	assign HEXO[4] = c1&c0\
	assign HEXO[5] = ~c0|c1\
	assign HEXO[6] = c1|c0\
endmodule\
\
//3to12bitmux module\
module mux2bit3to1 (SW,LEDR);\
	input[9:0]SW; //assign input to switches\
	output [9:0] LEDR; //assign output to ledr\
	\
	wire [1:0] U,V,W; //wire switch inputs\
	assign U = SW[5:4];  \
	assign V = SW[3:2];\
	assign W = SW[1:0];\
\
	wire [1:0] M; //wire led output\
	assign M = LEDR[1:0]\
	wire s0 = SW[9]; //assign variable s0 to switch 9\
	wire s1 = SW[8];  //assign variable s1 to switch 8\
	wire mux1_1,mux1_2; //wire intermediates\
	\
	\
	assign LEDR[9] = s0; //assign LEDs to s0 and s1 (below)\
	assign LEDR[8] = s1;\
	assign LEDR[7:2] = 0;\
/*	\
	assign mux1_1 = (~s0&SW[5])|(s0&SW[3]);\
	assign mux1_2 = (~s0&SW[4])|(s0&SW[2]);\
	\
	assign LEDR[0] =(~s1&mux1_1)|(s1&SW[1]); \
	assign LEDR[1] =(~s1&mux1_2)|(s1&SW[0]);\
*/\
 	assign mux1_1 = (~s0&U[0])|(s0&V[0]);\
	 assign mux1_2 = (~s0&U[1])|(s0&V[1]);\
	assign LEDR[0] =(~s1&mux1_1)|(s1&W[0]); \
	assign LEDR[1] =(~s1&mux1_2)|(s1&W[1]); 	\
   \
endmodule\
}