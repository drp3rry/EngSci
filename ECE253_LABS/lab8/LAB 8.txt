PART 3: count1s.s
.text/Users/danielperry/Documents/ECE253/Labs/LAB 8.txt
.global _start
_start:
	LDR r1,TEST_NUM
    
    MOV r0,#0
LOOP:
	CMP r1,#0
    BEQ END
    LSR r2,R1,#1
    AND R1,r1,r2
    ADD r0,r0,#1
    B LOOP

END:
B END
TEST_NUM: .word 0x103fe00f
.end
-----------
PART 4: 
.text
.global _start
_start:
	LDR r2,TEST_NUM
    ldr r1, [r2], #4
    MOV r5,#0
    MOV r0,#0
    BL count1s
    POP {R5}
    
END: B END

CYCLE:
	CMP R0,R4
    BGT STORE
    MOV R0,#0
    CMP r2,#EDGE
    BGT EXIT
    
    //BEQ END
    //BL count1s
    //CMP R5,R0
    //BLT STORE
    //BGT CYCLE

    
    
count1s:
	CMP r1,#0
    BEQ CYCLE
    LSR r2,R1,#1
    AND R1,r1,r2
    ADD r0,r0,#1
    B count1s

EXIT:
	MOV PC,LR
    
STORE:
	MOV R4,R0
    PUSH {R0}
    B CYCLE
    
TEST_NUM: .word 0x103fe00f,0xf38
EDGE: .word 0x1
.end
--------------------
PART 5
.text

.global _start
_start:

 
   	LDR r1, =TEST_NUM //Load address
    MOV r4, #0
    MOV r0, #0
    BL ONES //Branch to ONES subroutine
    MOV r5, r0
    
    
    LDR r1, =TEST_NUM //Load address
    MOV r4, #0
    MOV r0, #0
    BL LEADING //Branch to LEADING subrountine
    MOV r6, r0
    
    
	LDR r1, =TEST_NUM //Load address
    MOV r4, #0
    MOV r0, #0
    BL TRAILING //Branch to TRAILING subrountine
    MOV r7, r0
    



END:
	B END


/////////////////////////////////////ONES
//ONESR4 for counting number of 1s in each word, R0 for returning, R3 for storing word, R1 for storing address, R2 for shifted R3
ONES: 
	CMP r4, r0
    MOVGE r0, r4
    MOV r4, #0
   	LDR r3, [r1], #4 //Load data
    CMP r3, #-1
    BEQ ENDONES
    
LOOP1:
	CMP r3,#0
    BEQ ONES //Branch to ones if all 0s
    SUB r2,r3,#1
    AND r3,r3,r2
    ADD r4,#1
    B LOOP1

ENDONES:
	MOV PC,LR
////////////////////////////////////ONES 


/////////////////////////////////////LEADING
//LEADINNG R4 for counting number of leading 0s in each word, R0 for returning, R3 for storing word, R1 for storing address, R2 for shifted R3
LEADING: 
	CMP r4, r0
    MOVGE r0, r4
    MOV r4, #32
   	LDR r3, [r1], #4 //Load data
    CMP r3, #-1
    BEQ ENDLEADING
    
LOOP2:
	CMP r3,#0
    BEQ LEADING //Branch to ones if all 0s
    LSR r3,r3,#1
    SUB r4,#1
    B LOOP2

ENDLEADING:
	MOV PC,LR
////////////////////////////////////LEADING


/////////////////////////////////////TRAILING
//TRAILING R4 for counting number of leading 0s in each word, R0 for returning, R3 for storing word, R1 for storing address, R2 for shifted R3
TRAILING: 
	CMP r4, r0
    MOVGE r0, r4
    MOV r4, #32
   	LDR r3, [r1], #4 //Load data
    CMP r3, #-1
    BEQ ENDTRAILING
    
LOOP3:
	CMP r3,#0
    BEQ TRAILING //Branch to ones if all 0s
    LSL r3,r3,#1
    SUB r4,#1
    B LOOP3

ENDTRAILING:
	MOV PC,LR
////////////////////////////////////LEADING


TEST_NUM: 
            
            .word 0xff000ff0
            .word 0x000f0000
            .word 0x0000000f
            .word 0xf0000000

			.word -1
	.end